name: Force build and publish container

on:
     
  workflow_dispatch:
    
permissions:
  packages: write
  contents: write

env:
    VERSION: latest
    DKHUB_SLUG: afreisinger/docsify
    GHCR_SLUG: ghcr.io/afreisinger/docsify
    PACKAGE_NAME: docsify

jobs:
  docker:
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: ðŸ“¦ Get repo name
        id: repo
        run: echo "value=$(basename ${{ github.repository }})" >> $GITHUB_OUTPUT  
      
      - name: ðŸ“¦ Get todays date
        id: date
        run: echo value=$(date -u -d "-3 hours" +'%Y-%m-%dT%H:%M:%S') >> $GITHUB_OUTPUT
    
      #  Get latest release of docsify-cli
      - name: ðŸ“¦ Get latest release of docsify-cli
        id: latest_release
        env:
           token: ${{ secrets.GITHUB_TOKEN }}
           repository: "docsifyjs/docsify-cli"
           type: "stable"
        run: | 
          echo release=$(curl --silent "https://api.github.com/repos/docsifyjs/docsify-cli/releases/latest" | jq -r '.tag_name') >> $GITHUB_OUTPUT
          echo "latest_release: $release"
          
      #  Get previous release tag
      - name: ðŸ“¦ Get previous release tag
        id: previous_release
        env:
           token: ${{ secrets.GITHUB_TOKEN }}
           repository: ${{ env.DKHUB_SLUG }}
           type: "stable"
        run: |
          echo release=$(curl --silent "https://api.github.com/repos/${{ env.DKHUB_SLUG }}/releases/latest" | jq -r '.tag_name') >> $GITHUB_OUTPUT
          echo "previous_release: $release"
      
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
              ${{ github.repository }}
              ghcr.io/${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=My multi-arch docsify environment image
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ github.actor }}/${{ github.event.repository.name }}:${{ steps.latest_release.outputs.release }}
            ${{ github.actor }}/${{ github.event.repository.name }}:latest
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}:${{ steps.latest_release.outputs.release }}
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}:latest
          labels: |
            ${{ steps.meta.outputs.labels }}
      

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.latest_release.outputs.release }}
          name: ${{ steps.latest_release.outputs.release }}
          body: |
                Changelog found on [docsify-cli github](https://github.com/docsifyjs/docsify-cli/releases), please read the changes before updating.
                You can update the docker image with:
                ```
                docker compose pull
                docker compose up -d
                ```
                or
                ```
                docker pull ${{ env.DKHUB_SLUG }}:${{ env.VERSION }}
                ```
                or
                ```
                docker pull ${{ env.GHCR_SLUG }}:${{ env.VERSION }}
                ```
                
      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
           DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
           DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}
        with:
          destination_container_repo: ${{ env.DKHUB_SLUG }}
          provider: dockerhub
          short_description: 'Docker image for Docksify'
          readme_file: 'README.md'